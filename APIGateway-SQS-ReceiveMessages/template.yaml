AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'REST API Gateway integration to get messages from SQS (tag:
  apigw-sqs-rest, ReceiveMessage)'

Resources:
  #   API Gateway
  AppApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: apigw-rest-api-http-integration
      Description: REST API Integration with SQS

  # GET Method with POST AWS Service integration to SQS
  RootMethodGet:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref AppApi
      ResourceId: !GetAtt AppApi.RootResourceId
      HttpMethod: GET
      AuthorizationType: NONE
      RequestParameters:
        method.request.querystring.VisibilityTimeout: false
        method.request.querystring.WaitTimeSeconds: false
        method.request.querystring.MaxNumberOfMessages: false
        method.request.querystring.AttributeName: false
      Integration:
        Credentials: !GetAtt APISQSGatewayRole.Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: '200'
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestParameters:
          integration.request.header.Content-Type: '''application/x-www-form-urlencoded'''
          integration.request.querystring.Action: '''ReceiveMessage'''
          integration.request.querystring.AttributeName: method.request.querystring.AttributeName
          integration.request.querystring.MaxNumberOfMessages: method.request.querystring.MaxNumberOfMessages
          integration.request.querystring.VisibilityTimeout: method.request.querystring.VisibilityTimeout
          integration.request.querystring.WaitTimeSeconds: method.request.querystring.WaitTimeSeconds
        Type: AWS
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref AWS::Region
            - ':sqs:path/'
            - !Ref AWS::AccountId
            - /
            - !Sub ${MySqsQueue.QueueName}
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: '200'
  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - RootMethodGet
    Properties:
      RestApiId: !Ref AppApi

  Stage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: Prod
      RestApiId: !Ref AppApi
      DeploymentId: !Ref Deployment

  #   SQS Queue

  MySqsQueue:
    Type: AWS::SQS::Queue

  OrderServiceQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref MySqsQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: order-api-send-msg-sqs
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action:
              - SQS:ReceiveMessage
            Resource: !GetAtt MySqsQueue.Arn

  
  #   Roles

  APISQSGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                Resource:
                  - !GetAtt MySqsQueue.Arn

Outputs:
  # API Gateway Invoke URL
  AppApiEndpoint:
    Description: API Endpoint
    Value: !Sub https://${AppApi}.execute-api.${AWS::Region}.amazonaws.com/Prod

  QueueName:
    Description: SQS Name
    Value: !Sub ${MySqsQueue.QueueName}

  QueueURL:
    Description: SQS Queue URL
    Value: !Ref MySqsQueue

