{
    "title": "Adobe I/O Events to AWS Lambda with Amazon EventBridge",
    "description": "Use EventBridge Adobe I/O Events Integration to process order events with AWS Lambda, send notifications via SES, or store data in other AWS services.",
    "language": "Python",
    "level": "200",
    "framework": "CDK",
    "introBox": {
      "headline": "How it works",
      "text": [
        "This sample project demonstrates how to use the Adobe I/O Events Amazon EventBridge Integration and AWS Lambda to process/route events from Adobe. This pattern is leveraging the Adobe I/O Evenets Amazon EventBridge integration to send order events from the customer's Adobe account to their AWS account, via an Amazon EventBridge Partner event bus. Once the Adobe I/O events are in the customer's account, an Amazon EventBridge rule routes updated product events to a downstream Lambda function.",
        "Amazon CloudWatch log groups are provisioned for debugging and auditing.",
        "This pattern deploys two EventBridge Rules, one Lambda function, and two CloudWatch Log Groups."
      ]
    },
    "gitHub": {
        "template": {
          "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/adobe-eventbridge-lambda",
          "templateURL": "serverless-patterns/adobe-eventbridge-lambda",
          "projectFolder": "adobe-eventbridge-lambda",
          "templateFile": "app.py"
        }
    },
    "resources": {
        "bullets": [
          {
            "text": "Amazon EventBridge SaaS Integrations",
            "link": "https://aws.amazon.com/eventbridge/integrations/"
          },
          {
            "text": "Amazon EventBridge SaaS Integrations Documentation",
            "link": "https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-saas.html"
          },
          {
            "text": "Adobe's Amazon EventBridge Integration",
            "link":"https://developer.adobe.com/events/docs/guides/amazon_eventbridge/"
          }
        ]
    },
    "deploy": {
        "text": [
            "cdk deploy"
        ]
    },
    "testing": {
        "text": [
            "See the GitHub repo for detailed testing instructions."
        ]
    },
    "cleanup": {
        "text": [
            "<code>cdk destroy</code>"
        ]
    },
    "authors": [
        {
          "name": "Ragib Ahsan",
          "image": "https://media.licdn.com/dms/image/D4E03AQHKVYkUoGROvA/profile-displayphoto-shrink_800_800/0/1699650399893?e=1723680000&v=beta&t=A08_HJD38AAs5NdDzBsWzZksHIfztFW1ong3EJJodWA",
          "bio": "AWS Partner Solutions Architect based in NYC. Huge advocate for serverless architectures!",
          "linkedin": "ragibmahsan"
        }
    ]
}
