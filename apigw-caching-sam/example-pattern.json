{
  "title": "Amazon API Gateway with caching enable",
  "description": "Create an API Gateway REST API with Caching enabled using AWS SAM",
  "language": "Python",
  "level": "200",
  "framework": "AWS SAM",
  "introBox": {
    "headline": "How it works",
    "text": [
      "Amazon API Gateway has the ability to create and seamlessly utilize caching clusters in front of your API Gateway REST APIs."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-caching-sam",
      "templateURL": "serverless-patterns/apigw-caching-sam",
      "projectFolder": "apigw-caching-sam",
      "templateFile": "template.yaml"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "API Gateway Caching",
        "link": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html"
      }
    ]
  },
  "deploy": {
    "text": [
      "sam deploy"
    ]
  },
  "testing": {
    "text": [
      "See the GitHub repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "Delete the stack: <code>sam delete</code>."
    ]
  },
  "authors": [
    {
      "name": "Eric Johnson",
      "image": "https://serverlessland.com/assets/images/resources/ericdj.jpg",
      "bio": "Eric Johnson is a Principal Developer Advocate for Serverless Applications at Amazon Web Services and is based in Northern Colorado. Eric is a fanatic about serverless and enjoys helping developers understand how serverless technologies introduces a major paradigm shift in how they approach building and running applications at massive scale with minimal administration overhead. Prior to this, Eric has worked as a developer, solutions architect and AWS Evangelist for an AWS partner company.",
      "linkedin": "singledigit",
      "twitter": "edjgeek"
    }
  ]
}