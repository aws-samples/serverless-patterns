{
  "title": "Amazon API Gateway data validation",
  "description": "Creates an Amazon API Gateway with request validation, rejecting invalid requests before AWS Lambda invocation using model schema validation.",
  "language": "YAML",
  "level": "300",
  "framework": "Terraform",
  "introBox": {
    "headline": "How it works",
    "text": [
      "The data model is declared in the API Gateway resource. The Lambda function then requires the request body to be validated against this model."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-data-validation-tf",
      "templateURL": "serverless-patterns/apigw-data-validation-tf",
      "projectFolder": "apigw-data-validation-tf",
      "templateFile": "main.tf"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "Amazon API Gateway model example",
        "link": "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-api-models"
      },
      {
        "text": "JSON Schema",
        "link": "https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04#section-4.1"
      }
    ]
  },
	"deploy": {
		"text": [
		          "terraform init",
		          "terraform apply"
		        ]
	},
	"testing": {
		"text": [
		"See the Github repo for detailed testing instructions."
		]
	},
	"cleanup": {
		"text": [
		          "<code>terraform destroy</code>",
		          "terraform show"
		        ]
	},
	"authors": [
		{
			"name": "Makendran G",
			"image": "https://drive.google.com/file/d/1mUObnbmn52UWL-Zn39EpgpneiBNv3LCN/view?usp=sharing",
			"bio": "Cloud Support Engineer @ AWS",
			"linkedin": "makendran",
			"twitter": "@MakendranG"
		}
	]
}
