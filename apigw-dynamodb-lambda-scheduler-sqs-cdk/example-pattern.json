{
  "title": "Delayed processing of Dynamodb stream with EventBridge Scheduler",
  "description": "Create a workflow using CDK to process Dynamodb stream at scheduled time window.",
  "language": "TypeScript",
  "level": "200",
  "framework": "AWS CDK",
  "introBox": {
    "headline": "How it works",
    "text": [
      "This pattern demonstrates a sample to delay processing of Dynamodb stream with EventBridge Scheduler. EventBridge Scheduler invokes a target one-time or at regular intervals defined by a cron or rate expression. This service provides scheduling functionality independent of Event buses and rules. You can create a schedule to invoke targets such as Amazon SQS, or AWS Batch.",
      "Amazon DynamoDB streams are used to deliver event payload to the handlers in near real time. This pattern will help customers with usecases such as process stream events at a predefined time window, as well as triggring one target AWS service from EventBridge Scheduler.",
      "With Amazon EventBrdige Schedule you can invoke more than 270 AWS services and over 6,000 API operations. Without the need to provision and manage infrastructure, or integrate with multiple services, EventBridge Scheduler provides you with the ability to deliver schedules at scale and reduce maintenance costs.",
      "This pattern deploys one Amazon APIGateway, two AWS Lambda Functions, one Amazon DynamoDB Stream, one Amazon SQS queue, and two Amazon EventBridge Schedule Groups."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-dynamodb-lambda-scheduler-sqs-cdk",
      "templateURL": "serverless-patterns/apigw-dynamodb-lambda-scheduler-sqs-cdk",
      "projectFolder": "apigw-dynamodb-lambda-scheduler-sqs-cdk",
      "templateFile": "apigw-dynamodb-lambda-scheduler-sqs-cdk/AwsDynamodbLambdaSchedulerLambdaSampleStack.ts"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "Introducing Amazon EventBridge Scheduler",
        "link": "https://aws.amazon.com/blogs/compute/introducing-amazon-eventbridge-scheduler/"
      },
      {
        "text": "Using templated targets",
        "link": "https://docs.aws.amazon.com/scheduler/latest/UserGuide/managing-targets-templated.html"
      }
    ]
  },
  "deploy": {
    "text": [
      "cdk deploy"
    ]
  },
  "testing": {
    "text": [
      "See the GitHub repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "Delete the stack: <code>cdk destroy</code>."
    ]
  },
  "authors": [
    {
      "name": "Shashank Shrivastava",
      "image": "https://media.licdn.com/dms/image/D5603AQGrfCgpj_j3mw/profile-displayphoto-shrink_400_400/0/1673343619283?e=1684972800&v=beta&t=SoHAsTjGcrIlf9ToRrNX64I71rhp4MH0Kd9hrTk1bqw",
      "bio": "Sr. Cloud Application Architect at Amazon Web Services.",
      "linkedin": "shashank-shrivastava-85788b38/",
      "twitter": "@shashanksaid"
    }
  ]
}
