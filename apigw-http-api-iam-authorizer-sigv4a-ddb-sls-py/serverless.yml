service: serverless-land-${self:custom.name}

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9

  iam:
    role:
      statements:
        - Effect: Allow
          Action: dynamodb:scan
          Resource: !GetAtt ProductsTable.Arn
        - Effect: Allow
          Action: execute-api:Invoke
          Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/${sls:stage}/GET/products
custom:
  name: bb245
  logRetentionInDays: 1
  export-env:
    overwrite: true

functions:
  get-index:
    handler: functions.get_index.handler
    events:
      - http:
          path: /index
          method: get
    environment:
      products_api: !Sub https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${sls:stage}/products
  get-products:
    handler: functions.get_products.handler
    events:
      - http:
          path: /products
          method: get
          authorizer: aws_iam
    environment:
      default_results: 10
      products_table: !Ref ProductsTable
resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: code
            AttributeType: S
        KeySchema:
          - AttributeName: code
            KeyType: HASH
  Outputs:
    ProductsTableName:
      Value: !Ref ProductsTable
    ProductsTableNameArn:
      Value: !GetAtt ProductsTable.Arn

plugins:
  - serverless-python-requirements
  - serverless-export-env
  - serverless-plugin-log-retention
package:
  patterns:
    - '!docs/**'
    - '!seed-products.py'
    - '!example-pattern.json'