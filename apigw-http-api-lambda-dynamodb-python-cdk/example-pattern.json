{
    "title": "API Gateway to Lambda to DynamoDb",
    "description": "Create a Lambda function in VPC that receives a request from API Gateway and inserts a record into a DynamoDB table using VPC endpoint.",
    "language": "Python",
    "architectureURL": "docs/architecture.png",
    "videoId": "",
    "level": "200",
    "framework": "AWS CDK",
    "services": {
        "from": "apigw",
        "to": "dynamodb"
    },
    "introBox": {
        "headline": "How it works",
        "text": [
            "This pattern explains how to deploy a CDK application with Amazon API Gateway, AWS Lambda, VPC, VPC endpoint, and Amazon DynamoDB."
        ]
    },
    "gitHub": {
        "template": {
            "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-http-api-lambda-dynamodb-python-cdk",
            "readmeURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-http-api-lambda-dynamodb-python-cdk/README.md",
            "projectFolder": "apigw-http-api-lambda-dynamodb-python-cdk",
            "templateURL": "serverless-patterns/apigw-http-api-lambda-dynamodb-python-cdk",
            "templateFile": "stacks/apigw_http_api_lambda_dynamodb_python_cdk_stack.py"
        },
        "payloads": [
            {
                "headline": "",
                "payloadURL": ""
            }
        ]
    },
    "resources": {
        "headline": "Additional resources",
        "bullets": [
            {
                "text": "AWS Docs: Writing Data to a Table",
                "link": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.WriteData.html"
            },
            {
                "text": "Creating a scalable serverless import process for Amazon DynamoDB",
                "link": "https://aws.amazon.com/blogs/compute/creating-a-scalable-serverless-import-process-for-amazon-dynamodb/"
            }
        ]
    },
    "deploy": {
        "text": [
            "cdk deploy"
        ]
    },
    "cleanup": {
        "text": [
            "Delete the stack: <code>cdk destroy</code>."
        ]
    },
    "authors": [{
        "headline": "Presented by Rupesh Tiwari, AWS Senior Solution Architect",
        "name": "Rupesh Tiwari",
        "image": "https://avatars.githubusercontent.com/u/330383?v=4",
        "bio": "Senior Solutions Architect at AWS Global Financial Services.",
        "linkedin": "rupesh-tiwari",
        "twitter": "rupeshtiwari"
    }]
}
