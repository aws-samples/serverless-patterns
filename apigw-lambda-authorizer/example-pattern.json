{
    "title": "Amazon API Gateway with a Lambda Token Authorizer",
    "description": "Create a REST API Gateway with a Lambda Token Authorizer for access control",
    "language": "Node.js",
    "level": "200",
    "framework": "AWS SAM",
    "introBox": {
      "headline": "How it works",
      "text": [
        "This pattern deploys an Amazon API Gateway REST API endpoint that uses a Lambda Token Authorizer for access control.",
        "If the request to the endpoint does not include a 'authorizationToken' header, the Lambda Authorizer will not be invoked and API Gateway will return a 401 Forbidden.",
        "If the request to the endpoint includes a 'authorizationToken' header, the Lambda Authorizer will be invoked and its response will depend on the value of the 'authorizationToken' header.",
        "If the value of 'authorizationToken' header is 'unauthorized', API Gateway will return a 401 Unauthorized error.",
        "If the value of 'authorizationToken' header is 'Bearer deny', API Gateway will return a 403 error.",
        "Only if the value of 'authorizationToken' header is 'Bearer allow', API Gateway will successfully invoke the Lambda integration and return a 200.",
        "For any other case, API Gateway will return a 500 error."
      ]
    },
    "gitHub": {
      "template": {
        "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-lambda-authorizer",
        "templateURL": "serverless-patterns/apigw-lambda-authorizer",
        "projectFolder": "apigw-lambda-authorizer",
        "templateFile": "template.yaml"
      }
    },
    "resources": {
      "bullets": [
        {
          "text": "Controlling access to a REST API with a Lambda Token Authorizer",
          "link": "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html"
        }
      ]
    },
    "deploy": {
      "text": [
        "Deploy the stack: <code>sam deploy</code>."
      ]
    },
    "testing": {
      "text": [
        "See the GitHub repo for detailed testing instructions."
      ]
    },
    "cleanup": {
      "text": [
        "Delete the stack: <code>sam delete</code>."
      ]
    },
    "authors": [
      {
        "headline": "Presented by Albert Blaya, Solutions Architect",
        "name": "Albert Blaya",
        "image": "https://media-exp1.licdn.com/dms/image/C5603AQEw2HXx9zs7yg/profile-displayphoto-shrink_200_200/0/1600474292127?e=1655942400&v=beta&t=SbeIn9psV0BIFkbROTDRIfPMKMtyrrgBdgt0tRHY0BY",
        "bio": "Albert is a Solutions Architect at Amazon Web Services based in Australia.",
        "linkedin": "albertblaya"
      }
    ]
  }
  