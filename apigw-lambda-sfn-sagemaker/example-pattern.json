{
  "title": "API driven SageMaker domain creation",
  "description": "API Gateway/Lambda/SFN pattern to manage SageMaker Domain Creation.",
  "language": "Terraform & Python",
  "level": "200",
  "framework": "Terraform",
  "introBox": {
    "headline": "How it works",
    "text": [
      "This sample project demonstrates how to use an API driven approach to provision SageMaker Domain.",
      "API Gateway Post method invokes a Lambda which uses python boto3 to call AWS SageMaker api to create a SageMaker domain.",
      "The Lambda function then invokes a Step Functions state machine to monitor the creation of the domain.",
      "The Step Functions state machine uses AWS SDK to get the status of the Domain creation and has a wait pattern to monitor the status until successful/failed creation.",
      "This orchestration can be further enhanced to add additional SageMaker configurations like User Profiles etc."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-lambda-sfn-sagemaker",
      "templateURL": "serverless-patterns/apigw-lambda-sfn-sagemaker",
      "projectFolder": "apigw-lambda-sfn-sagemaker",
      "templateFile": "apigw-lambda-sfn-sagemaker/infra/main.tf"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "Amazon SageMaker domain",
        "link": "https://docs.aws.amazon.com/sagemaker/latest/dg/sm-domain.html"
      },
      {
        "text": "Manage SageMaker with Step Functions",
        "link": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html"
      },
      {
        "text": "Step Functions Job Poller Pattern",
        "link": "https://docs.aws.amazon.com/step-functions/latest/dg/sample-project-job-poller.html"
      }
    ]
  },
  "deploy": {
    "text": [
      "terraform init",
      "terraform apply --auto-approve"
    ]
  },
  "testing": {
    "text": [
    ]
  },
  "cleanup": {
    "text": [
      "terraform destroy --auto-approve"
    ]
  },
  "authors": [
    {
      "name": "Naveen Balaraman",
      "image": "https://avatars.githubusercontent.com/navbalaraman",
      "bio": "Sr. Cloud Application Architect passionate about Containers, Serverless Applications, Architecting Microservices and helping customers leverage the power of Cloud.",
      "linkedin": "https://www.linkedin.com/in/naveen-balaraman-96bb1a19/"
    }
  ]
}
