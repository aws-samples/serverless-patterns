{
    "title": "Amazon API Gateway to AWS Lambda with wildcard resource-based policy",
    "description": "Create a REST API with proxy integration to a Lambda function to keep the size of resource-based policy within the allowed hard limit.",
    "language": "Python",
    "level": "200",
    "framework": "CDK",
    "introBox": {
        "headline": "How it works",
        "text": [
            "Currently, in an API Gateway-Lambda setup whenever an user adds an integration, CDK adds a new policy to the Lambda function's resource-based policy.",
            "It might result in exceeding the policy size limit for Lambda function which is 20KB.",
            "This sample project demonstrates how to use CDK to create a customized integration that would keep the policy size within limit by using wildcards in the resource-based policy."
        ]
    },
    "gitHub": {
        "template": {
            "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-lambda-wildcard-resourcebasedpolicy-cdk",
            "templateURL": "serverless-patterns/apigw-lambda-wildcard-resourcebasedpolicy-cdk",
            "projectFolder": "apigw-lambda-wildcard-resourcebasedpolicy-cdk",
            "templateFile": "cdk_apigw_lambda_wildcardpolicy_stack/cdk_apigw_lambda_wildcardpolicy_stack.py"
        }
    },
    "resources": {
        "bullets": []
    },
    "deploy": {
        "text": [
            "sam deploy"
        ]
    },
    "testing": {
        "text": [
            "See the GitHub repo for detailed testing instructions."
        ]
    },
    "cleanup": {
        "text": [
            "Delete the stack: sam delete."
        ]
    },
    "authors": [
        {
            "name": "Saborni Bhattacharya",
            "image": "https://drive.google.com/file/d/1AZFquOkafEQRUlrT4hKOtIbt4Cq66SHd/view?usp=sharing",
            "bio": "I am Saborni working as a Cloud Engineer at AWS SE Serverless.",
            "linkedin": "saborni-bhattacharya-5b523812a"
        }
    ],
    "patternArch": {
        "icon1": {
            "x": 25,
            "y": 50,
            "service": "apigw",
            "label": "Amazon API Gateway REST API"
        },
        "icon2": {
            "x": 80,
            "y": 50,
            "service": "lambda",
            "label": "AWS Lambda"
        },
        "line1": {
            "from": "icon1",
            "to": "icon2"
        }
    }
}
