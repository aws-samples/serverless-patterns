{
  "title": "Amazon API Gateway to AWS Lambda using OpenAPI",
  "description": "Create a Lambda backed REST API using OpenAPI specification, integrated with lambda powertools for enhanced logging and traceability",
  "language": "TypeScript",
  "level": "200",
  "framework": "Terraform",
  "services": {
    "from": "apigw",
    "to": "lambda, dynamodb and xray"
  },
  "introBox": {
    "headline": "How it works",
    "text": [
      "This Terraform application deploys a Lambda backed Amazon API Gateway REST API using OpenAPI specification. OpenAPI specification yaml is included in the project which defines CRUD endpoints and their Lambda integrations. In addition, as a best practice Lambda powertools have been incorporated as a Layer which provides a structured logging mechanism via Cloudwatch Logs and enhanced tracing which allows end to end tracing of the incoming requests via AWS X-Ray."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/apigw-openapi-lambda-dynamodb-xray-terraform",
      "templateURL": "https://raw.githubusercontent.com/aws-samples/serverless-patterns/main/apigw-openapi-lambda-dynamodb-xray-terraform/infra/main.tf",
      "projectFolder": "apigw-openapi-lambda-dynamodb-xray-terraform",
      "templateFile": "infra/main.tf",
      "readmeURL": "https://raw.githubusercontent.com/aws-samples/serverless-patterns/main/apigw-openapi-lambda-dynamodb-xray-terraform/README.md"
    }
  },
  "resources": {
    "headline": "Additional resources",
    "bullets": [
      {
        "text": "Integrating X-Ray SDK in Lambda using Powertools",
        "link": "https://docs.powertools.aws.dev/lambda/typescript/latest/core/tracer/"
      },
      {
        "text": "Configuring REST API using OpenAPI",
        "link": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html"
      }
    ]
  },
  "build": {
    "text": [
      "npm install",
      "npm run build"
    ]
  },
  "deploy": {
    "text": [
      "terraform -chdir=infra init",
      "terraform -chdir=infra apply"
    ]
  },
  "testing": {
    "text": [
      "See the GitHub repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "terraform -chdir=infra destroy"
    ]
  },
  "authors": [
    {
      "name": "Damodar Shenvi Wagle",
      "image": "https://drive.google.com/file/d/1o-NvTy-Ock12bKOLoMiwyolqizNNMhv8/view?usp=sharing",
      "bio": "Damodar Shenvi Wagle is a Senior Cloud Application Architect at AWS Professional Services.",
      "linkedin": "damodar-shenvi-wagle-72375548"
    }
  ]
}
