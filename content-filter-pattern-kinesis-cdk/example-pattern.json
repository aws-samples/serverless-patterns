{
  "title": "Kinesis to Kinesis using EventBridge Pipes with content filter pattern",
  "description": "This pattern demonstrates the content filter pattern between two Kinesis streams, implemented using an EventBridge Pipe.",
  "language": "TypeScript",
  "level": "300",
  "framework": "CDK",
  "introBox": {
    "headline": "How it works",
    "text": [
      "The pipe uses a filter to discard unwanted messages and an input transformer to select which attributes to keep for the remaining messages."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/content-filter-pattern-kinesis-cdk",
      "templateURL": "serverless-patterns/content-filter-pattern-kinesis-cdk",
      "projectFolder": "content-filter-pattern-kinesis-cdk",
      "templateFile": "src/lib/content-filter-stack.ts"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "More Enterprise Integration Patterns on AWS Samples",
        "link": "https://github.com/aws-samples/amazon-eventbridge-pipes-architectural-patterns"
      }
    ]
  },
  "deploy": {
    "text": [
      "cdk deploy"
    ]
  },
  "testing": {
    "text": [
      "See the Github repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "Delete the stack: <code>cdk delete</code>."
    ]
  },
  "authors": [
    {
      "name": "Dominik Richter",
      "image": "https://avatars.githubusercontent.com/u/29404931",
      "bio": "Solutions Architect at AWS, passionate about event-driven architectures and Serverless.",
      "linkedin": "do-richter"
    }
  ]
}
