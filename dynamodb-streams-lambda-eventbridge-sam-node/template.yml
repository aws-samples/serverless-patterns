Transform: AWS::Serverless-2016-10-31

Resources:
##########################################################################
#   DynamoDB                                                             #
##########################################################################
  MyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

###########################################################
# BUS                                                      #
###########################################################
  MyBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Sub ${AWS::StackName}-bus

##########################################################################
#   Lambda Function                                                      #
##########################################################################
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: StreamFunction
      Handler: handler.handler
      Runtime: nodejs18.x
      Architectures: ["arm64"]
      Timeout: 60
      MemorySize: 1024
      Policies:
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref MyBus
      Events:
        DynamoStream:
          Type: DynamoDB
          Properties:
            BatchSize: 100
            ParallelizationFactor: 10
            StartingPosition: LATEST
            MaximumRetryAttempts: 2
            BisectBatchOnFunctionError: true
            MaximumRecordAgeInSeconds: 120
            FilterCriteria:
              Filters:
                - Pattern: '{"eventName": ["INSERT"]}'
            Stream: !GetAtt MyTable.StreamArn
      Environment:
        Variables:
          BUS_NAME: !Ref MyBus
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        External: 
          - '@aws-sdk/client-eventbridge'
          - '@aws-sdk/util-dynamodb'
        Minify: true
        Target: "es2022"
        Sourcemap: false
        EntryPoints: 
          - src/handler.ts

  MyFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 1
      LogGroupName: !Sub /aws/lambda/${MyFunction}

##########################################################################
#   OUTPUTS                                                              #
##########################################################################
Outputs:
  MyTableStream:
    Value: !GetAtt MyTable.StreamArn
    Export: 
      Name: !Sub ${AWS::StackName}-MyTableStream

  MyFunctionArn:
    Value: !GetAtt MyFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-MyFunctionArn