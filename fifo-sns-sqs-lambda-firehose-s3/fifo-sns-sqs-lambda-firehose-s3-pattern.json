{
  "title": "Record messages sent by sns fifo topic into s3 using fifo SQS queue , Lambda and firehose",
  "description": "Save messages sent from a fifo sns topic into an S3 bucket using fifo sqs queue Lambda and Firehose as a bridge to S3.",
  "language": "Python",
  "level": "200",
  "framework": "terraform",
  "introBox": {
    "headline": "How it works",
    "text": [
      "The Terraform template in this pattern allow you to connect FIFO sqs queue to firehose in order to precess (transform, compress,...) messages sent by a FIFO sns topic and save the result to an S3 bucket using a Lambda function as a bridge to firehose.",
      "Amazon Kinesis Firehose Easily capture, transform, and load streaming data. Create a delivery stream, select your destination, and start streaming real-time data.",
      "This pattern deploys One SNS Fifo topic, One SQS Fifo Topic, One python Lambda function with a cloudwatch log group and one Firehose delivery stream."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/fifo-sns-sqs-lambda-firehose-s3",
      "templateURL": "serverless-patterns/fifo-sns-sqs-lambda-firehose-s3",
      "projectFolder": "fifo-sns-sqs-lambda-firehose-s3n",
      "templateFile": "fifo-sns-sqs-lambda-firehose-s3/main.fr"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "FIFO SNS topic",
        "link": "https://docs.aws.amazon.com/sns/latest/dg/sns-fifo-topics.html"
      },
      {
        "text": "FIFO SQS queue",
        "link": "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html"
      },
      {
        "text": "AWS Lambda",
        "link": "https://aws.amazon.com/lambda/"
      },
      {
        "text": "Amazon Kinesis Firehose",
        "link": "https://aws.amazon.com/kinesis/data-firehose/"
      },
      {
        "text": "Amazon S3",
        "link": "https://aws.amazon.com/s3/"
      },
      {
        "text": "Amazon Cloudwatch",
        "link": "https://aws.amazon.com/cloudwatch/"
      },
      {
        "text": "Terraform AWS Provider",
        "link": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs"
      }
    ]
  },
  "deploy": {
    "text": [
      "terraform init",
       "terraform apply"
    ]
  },
  "testing": {
    "text": [
      "See the GitHub repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "terraform destroy"
    ]
  },
  "authors": [
    {
      "name": "Hicham Terkiba",
      "image": "https://avatars.githubusercontent.com/u/13402022?s=400&u=b501c0475f8acd994c9ddb7444150845075a479a&v=4",
      "bio": "AWS PRoserv Cloud Infrastructure Architect",
      "linkedin": "https://www.linkedin.com/in/hicham-terkiba-39826259/",
      "twitter": ""
    }
  ]
}

