{
  "title": "Kinesis Firehose Data Transformation with Lambda",
    "description": "Transform incoming source data and deliver the transformed data to destinations.",
    "language": "Node.js",
    "level": "200",
    "framework": "AWS CDK",
    "introBox": {
      "headline": "How it works",
      "text": [
        "The purpose of this pattern is to deploy the infrastructure necessary to enable Kinesis Data Firehose data transformation.",
        "Kinesis Data Firehose can invoke a Lambda function to transform incoming source data and deliver the transformed data to destinations. In this architecture, Kinesis Data Firehose then invokes the specified Lambda function asynchronously with each buffered batch using the AWS Lambda synchronous invocation mode. The transformed data is sent from Lambda to Kinesis Data Firehose. Kinesis Data Firehose then sends it to the destination S3 bucket when the specified destination buffering size or buffering interval is reached, whichever happens first."

      ]
    },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/firehose-transformation-sam",
      "templateURL": "serverless-patterns/firehose-transformation-sam",
      "projectFolder": "firehose-transformation-sam",
      "templateFile": "firehose-transformation-sam/template.yaml"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "Amazon Kinesis Data Firehose Data Transformation",
        "link": "https://docs.aws.amazon.com/firehose/latest/dev/data-transformation.html"
      },
      {
        "text": "Redact sensitive data from streaming data in near-real time using Amazon Comprehend and Amazon Kinesis Data Firehose",
        "link": "https://aws.amazon.com/blogs/machine-learning/redact-sensitive-data-from-streaming-data-in-near-real-time-using-amazon-comprehend-and-amazon-kinesis-data-firehose/"
      }
    ]
  },
  "deploy": {
    "text": [
      "sam deploy --guided"
    ]
  },
  "testing": {
    "text": [
      "See the GitHub repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "Delete the stack: aws cloudformation delete-stack --stack-name STACK_NAME"
    ]
  },
  "authors": [
    {
      "name": "Maya Flores",
      "image": "https://media-exp1.licdn.com/dms/image/C4E03AQGFaDVfkIJi4g/profile-displayphoto-shrink_200_200/0/1620953260457?e=1671062400&v=beta&t=pVt_BUU-r7MtlMwcOxgXgtaUM2tVRe4CUtlUknM--os",
      "bio": "Partner Solutions Architect @ AWS. Serverless enthusiast.",
      "linkedin": "maya-m-flores"
    }
  ]
}
