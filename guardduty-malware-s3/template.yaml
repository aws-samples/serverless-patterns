AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Amazon GuardDuty Malware Protection for Amazon S3 (uksb-1tthgi812) (tag:guardduty-malware-s3)

Parameters:
  ScanningBucketName:
    Type: String
    Description: Enter the name of the protected S3 bucket
  TaggingStatus:
    Default: ENABLED
    Type: String
    Description: Indicate whether or not the tags will added to the scanned S3 object
    AllowedValues:
      - ENABLED
      - DISABLED
  EmailAddress:
    Type: String
    Description: Enter your email address

Resources:

  # This is protected S3 bucket
  ScanningS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ScanningBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  
  # This defines the SNS topic
  ScanResultSnsTopic:
    Type: "AWS::SNS::Topic"
  
  # This defines the SNS Subscription
  ScanResultSnsSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Endpoint: !Ref EmailAddress
      Protocol: "email"
      TopicArn: !Ref ScanResultSnsTopic
  
  # This is Malware Protection plan for the protected resource
  MyMalwareProtectionPlan:
    Type: AWS::GuardDuty::MalwareProtectionPlan
    Properties:
      Actions:
        Tagging:
          Status: !Ref TaggingStatus
      ProtectedResource: 
        S3Bucket:
          BucketName: !Ref ScanningBucketName       
      Role: !GetAtt S3MalwareProtectionRole.Arn
  
  #  This enables Malware Protection for S3 by managing EventBridge rules and S3 object access
  S3MalwareProtectionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: malware-protection-plan.guardduty.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: "/"
      Policies:
        - PolicyName: s3_malware_protection__policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: "AllowManagedRuleToSendS3EventsToGuardDuty"
                Effect: Allow
                Action:
                  - "events:PutRule"
                  - "events:DeleteRule"
                  - "events:PutTargets"
                  - "events:RemoveTargets"
                Resource:
                  - !Sub "arn:aws:events:us-east-1:${AWS::AccountId}:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*"
                Condition:
                  StringLike:
                    events:ManagedBy: "malware-protection-plan.guardduty.amazonaws.com"
              - Sid: "AllowGuardDutyToMonitorEventBridgeManagedRule"
                Effect: Allow
                Action:
                  - "events:DescribeRule"
                  - "events:ListTargetsByRule"
                Resource:
                  - !Sub "arn:aws:events:us-east-1:${AWS::AccountId}:rule/DO-NOT-DELETE-AmazonGuardDutyMalwareProtectionS3*"
              - Sid: "AllowPostScanTag"
                Effect: Allow
                Action:
                  - "s3:PutObjectTagging"
                  - "s3:GetObjectTagging"
                  - "s3:PutObjectVersionTagging"
                  - "s3:GetObjectVersionTagging"
                Resource:
                  - !Sub "arn:aws:s3:::${ScanningBucketName}/*"
              - Sid: "AllowEnableS3EventBridgeEvents"
                Effect: Allow
                Action:
                  - "s3:PutBucketNotification"
                  - "s3:GetBucketNotification"
                Resource:
                  - !Sub "arn:aws:s3:::${ScanningBucketName}"
              - Sid: "AllowPutValidationObject"
                Effect: Allow
                Action:
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:aws:s3:::${ScanningBucketName}/malware-protection-resource-validation-object"
              - Sid: "AllowCheckBucketOwnership"
                Effect: Allow
                Action:
                  - "s3:ListBucket"
                Resource:
                  - !Sub "arn:aws:s3:::${ScanningBucketName}"
              - Sid: "AllowMalwareScan"
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                Resource:
                  - !Sub "arn:aws:s3:::${ScanningBucketName}/*"
              - Sid: "AllowDecryptForMalwareScan"
                Effect: Allow
                Action:
                  - "kms:GenerateDataKey"
                  - "kms:Decrypt"
                Resource: !Sub "arn:aws:kms:us-east-1:${AWS::AccountId}:key/APKAEIBAERJR2EXAMPLE"
                Condition:
                  StringLike:
                    kms:ViaService: "s3.us-east-1.amazonaws.com"
  
  # This grants permission to EventBridge to invoke SNS
  ScanResultEventBridgeToSnsPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sns:Publish
          Resource: !Ref ScanResultSnsTopic
      Topics:
        - !Ref ScanResultSnsTopic
  
  # This is the EventBridge Rule to send S3 object scan results to SNS
  ScanResultEventBridgeRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "GuardDuty S3 Object Scan Result EventBridge Rule"
      EventPattern:
        source:
          - "aws.guardduty"
        detail-type:
          - "GuardDuty Malware Protection Object Scan Result"
      Targets:
        - Arn: !Ref ScanResultSnsTopic
          Id: "guard-duty-sns"
Outputs:
  S3Bucket:
    Description: Name of the Scanning S3 bucket
    Value:
      Ref: ScanningBucketName
  MalwareProtectionPlanId:
    Description: A unique identifier associated with the Malware Protection plan resource
    Value: !Ref MyMalwareProtectionPlan
