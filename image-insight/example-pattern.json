{
  "title": "Step Functions to Athena",
  "description": "Create a Step Functions workflow to query Amazon Athena.",
  "language": "Python",
  "level": "200",
  "framework": "CDK",
  "introBox": {
    "headline": "How it works",
    "text": [
      "This sample project demonstrates how to use an AWS Step Functions state machine to query Athena and get the results. This pattern is leveraging the native integration between these 2 services which means only JSON-based, structured language is used to define the implementation.",
      "With Amazon Athena you can get up to 1000 results per invocation of the GetQueryResults method and this is the reason why the Step Function has a loop to get more results. The results are sent to a Map which can be configured to handle (the DoSomething state) the items in parallel or one by one by modifying the max_concurrency parameter.",
      "This pattern deploys one Step Functions, two S3 Buckets, one Glue table and one Glue database."
    ]
  },
  "gitHub": {
    "template": {
      "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/sfn-athena-cdk-python",
      "templateURL": "serverless-patterns/sfn-athena-cdk-python",
      "projectFolder": "sfn-athena-cdk-python",
      "templateFile": "sfn_athena_cdk_python/sfn_athena_cdk_python_stack.py"
    }
  },
  "resources": {
    "bullets": [
      {
        "text": "Call Athena with Step Functions",
        "link": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html"
      },
      {
        "text": "Amazon Athena - Serverless Interactive Query Service",
        "link": "https://aws.amazon.com/athena/"
      }
    ]
  },
  "deploy": {
    "text": [
      "sam deploy"
    ]
  },
  "testing": {
    "text": [
      "See the GitHub repo for detailed testing instructions."
    ]
  },
  "cleanup": {
    "text": [
      "Delete the stack: <code>cdk delete</code>."
    ]
  },
  "authors": [
    {
      "name": "Your name",
      "image": "link-to-your-photo.jpg",
      "bio": "Your bio.",
      "linkedin": "linked-in-ID",
      "twitter": "twitter-handle"
    }
  ]
}
