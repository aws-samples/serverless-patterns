{
    "title": "Streaming Serverless RAG with Bedrock, Lambda, S3",
    "description": "With this pattern I want to showcase how to implement a streaming serverless RAG architecture.",
    "language": "Node.js",
    "level": "400",
    "framework": "SAM",
    "introBox": {
      "headline": "How it works",
      "text": [
        "With this pattern I want to showcase how to implement a streaming serverless RAG architecture.",
        "Customers asked for a way to quickly test RAG capabilities on a small number of documents without managing infrastructure for contextual knowledge and non-parametric memory.",
        "In this pattern, I run a RAG workflow in a single Lambda function, so that customers only pay for the infrastructure they use, when they use it. We use LanceDB with S3 as backend for embedding storage.",
        "This pattern deploys one Lambda function with a function URL and an S3 Bucket where to store your embeddings.",
        "This pattern makes use of Bedrock to calculate embeddings with Amazon Titan Embedding and any AMazon Bedrock chat model as prediction LLM",
        "The responses are streamed using Lambda URL function streaming for a quicker time to first byte and a better user experience",
        "I also provide a local pipeline to ingest your PDFs and upload them to S3.",
        "There is also an example of how to consume streamed responses using a very basic React application."
      ]
    },
    "gitHub": {
      "template": {
        "repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/lambda-bedrock-s3-streaming-rag",
        "templateURL": "serverless-patterns/lambda-bedrock-s3-streaming-rag",
        "projectFolder": "lambda-bedrock-s3-streaming-rag",
        "templateFile": "template.yml"
      }
    },
    "resources": {
      "bullets": [
        {
          "text": "Amazon Bedrock",
          "link": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html"
        },
        {
          "text": "Retrieval Augmented Generation (RAG) - original research paper",
          "link": "https://arxiv.org/abs/2005.11401"
        },
        {
            "text": "Amazon Lambda Function response streaming",
            "link": "https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html"
        },
        {
          "text": "Amazon Titan Embedding",
          "link": "https://aws.amazon.com/bedrock/titan/#Titan_Embeddings_.28generally_available.29"
        }
      ]
    },
    "deploy": {
      "text": [
        "sam build -u",
        "sam deploy -g"
      ]
    },
    "testing": {
      "text": [
        "See the GitHub repo for detailed testing instructions."
      ]
    },
    "cleanup": {
      "text": [
        "sam delete"
      ]
    },
    "authors": [
      {
        "name": "Kevin Shaffer-Morrison",
        "image": "https://kevin.shaffer-morrison.com/images/sideProfileHeadshot.jpg",
        "bio": "Kevin Shaffer-Morrison is a Senior Solutions Architect at Amazon Web Services. He's helped hundreds of startups get off the ground quickly and up into the cloud. Kevin focuses on helping the earliest stage of founders with code samples and  twitch live streams  on twitch.tv/aws.",
        "linkedin": "kshaffermorrison"
      }
    ]
  }