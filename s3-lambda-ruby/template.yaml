AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  s3-lambda-ruby

  An example function demonstrating packaging a complicated gem that depends on
  multiple system libraries which are not installed in the lambda environment.
Parameters:
  SourceBucketName:
    Type: String

  DestinationBucketName:
    Type: String

Globals:
  Function:
    Timeout: 10
    MemorySize: 128
Resources:
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName

  DestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DestinationBucketName

  ImageMagickLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleArchitectures:
        - arm64
      ContentUri: imagemagick_layer/
      CompatibleRuntimes:
        - ruby3.2
    Metadata:
      BuildMethod: makefile
      BuildArchitecture: arm64

  ImageResizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: image_resizer/
      Handler: app.lambda_handler
      Runtime: ruby3.2
      Architectures:
        - arm64
      Layers:
        - !Ref ImageMagickLayer
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SourceBucketName
        - S3CrudPolicy:
            BucketName: !Ref DestinationBucketName
      Environment:
        Variables:
          DESTINATION_BUCKET: !Ref DestinationBucketName
      LoggingConfig:
        LogFormat: JSON
        ApplicationLogLevel: INFO
      Events:
        FileUpload:
          Type: S3
          Properties:
            Bucket: !Ref SourceBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.jpg'

Outputs:
  ImageResizerFunction:
    Description: Image Resizer Lambda Function ARN
    Value: !GetAtt ImageResizerFunction.Arn
