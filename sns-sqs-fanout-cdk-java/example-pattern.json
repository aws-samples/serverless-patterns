{
	"title": "Amazon SNS to Amazon SQS fanout with filtering",
	"description": "Creates SNS topic and SQS queues with message body based and attribute based filter using configuration file (appSettings.json)",
	"language": "Java",
	"level": "200",
	"framework": "CDK",
	"introBox": {
		"headline": "How it works",
		"text": [
			"This CDK application demonstrates how to create fanout pattern using a SNS topic and SQS queues with subscription filters.",
			"Number of queues required and type of filter (Message attribute based or message body based) can be defined in appSettings.json (Sample json is provided, replace queue names and filter by conditions as needed)."
		]
	},
	"gitHub": {
		"template": {
			"repoURL": "https://github.com/aws-samples/serverless-patterns/tree/main/sns-sqs-fanout-cdk-java",
			"projectFolder": "sns-sqs-fanout-cdk-java",
			"templateFile": "src/main/java/com/myorg/SnsToSqsFanOutStack.java.java",
			"templateURL": "serverless-patterns/sns-sqs-fanout-cdk-java"
		}
	},
	"resources": {
		"bullets": [
			{
				"text": "Fanout to Amazon SQS queues",
                		"link": "https://docs.aws.amazon.com/sns/latest/dg/sns-sqs-as-subscriber.html"
            		},
			{
				"text": "Amazon SNS message filtering",
                		"link": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-filtering.html"
            		},
			{
				"text": "Message driven",
                		"link": "https://docs.aws.amazon.com/whitepapers/latest/reactive-systems-on-aws/message-driven.html"
            		},
			{
				"text": "Introducing payload-based message filtering for Amazon SNS",
                		"link": "https://aws.amazon.com/blogs/compute/introducing-payload-based-message-filtering-for-amazon-sns/"
            		}
		]
	},
	"deploy": {
		"text": [
			"cdk deploy"
		]
	},
	"testing": {
		"text": [
			"See the GitHub repo for detailed testing instructions."
		]
	},
	"cleanup": {
		"text": [
			"Delete the stack: <code>cdk delete</code>."
		]
	},
	"authors": [
		{
			"name": "Matt Ridehalgh",
			"image": "https://avatars.githubusercontent.com/u/9155962",
			"bio": "Matt Ridehalgh is a Solutions Architect at AWS.",
			"linkedin": "matthew-ridehalgh",
			"twitter": "mrideh"
		}
	]
}
